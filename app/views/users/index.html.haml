- if @users.nil?
  NO USER IN THE DATABASE.
-else
  - model_class = User
  .page-header
    %h1=t '.title', :default => model_class.model_name.human.pluralize.titleize
  %table.table.table-striped
    %thead
      %tr
        %th= model_class.human_attribute_name(:id)
        %th= model_class.human_attribute_name(:avatar)
        %th= model_class.human_attribute_name(:email)
        %th= model_class.human_attribute_name(:nickname)
        %th= model_class.human_attribute_name(:firstname)
        %th= model_class.human_attribute_name(:surname)
        %th= model_class.human_attribute_name(:slug)
        %th= model_class.human_attribute_name(:role)
        %th= model_class.human_attribute_name(:current_sign_in_at)
        %th= model_class.human_attribute_name(:last_sign_in_at)
        %th= model_class.human_attribute_name(:current_sign_in_ip)
        %th= model_class.human_attribute_name(:last_sign_in_ip)
        %th= model_class.human_attribute_name(:deleted_at)
        %th= model_class.human_attribute_name(:created_at)
        %th=t '.actions', :default => t("helpers.actions")
    %tbody
      - @users.each do |user|
        %tr
          %td= link_to user.id, user_path(user)
          %td= image_tag user.avatar.medium.url.to_s unless user.avatar.blank?
          %td= user.email
          %td= user.nickname
          %td= user.firstname
          %td= user.surname
          %td= user.slug
          %td= user.role
          %td= user.current_sign_in_at
          %td= user.last_sign_in_at
          %td= user.current_sign_in_ip
          %td= user.last_sign_in_ip
          %td= user.deleted_at
          %td=l user.created_at
          %td
            = link_to t('.show', :default => t("helpers.links.show")), user_path(user), class: 'btn btn-default btn-xs'
            - if (current_user == user)
              = link_to t('.edit', :default => t("helpers.links.edit")), edit_user_registration_path, class: 'btn btn-info btn-xs'
            - if current_user.admin? && user.deleted?
              = link_to 'Restore', restore_user_path(current_user.id, target_id: user), method: :post, class: 'btn btn-warning btn-xs'
            -elsif current_user.admin?
              = link_to t('.destroy', :default => t("helpers.links.destroy")), user_path(current_user.id, target_id: user), method: :delete, data: { confirm: t('.confirm', default: t("helpers.links.confirm", default: 'Are you sure?')) }, class: 'btn btn-xs btn-danger'
= console
